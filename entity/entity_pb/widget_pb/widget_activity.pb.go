// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: widget_activity.proto

package widget_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActivityChatType int32

const (
	ActivityChatType_ChatTypeNone ActivityChatType = 0
	ActivityChatType_ChatTypeTg   ActivityChatType = 1
	ActivityChatType_ChatTypeDC   ActivityChatType = 2
)

// Enum value maps for ActivityChatType.
var (
	ActivityChatType_name = map[int32]string{
		0: "ChatTypeNone",
		1: "ChatTypeTg",
		2: "ChatTypeDC",
	}
	ActivityChatType_value = map[string]int32{
		"ChatTypeNone": 0,
		"ChatTypeTg":   1,
		"ChatTypeDC":   2,
	}
)

func (x ActivityChatType) Enum() *ActivityChatType {
	p := new(ActivityChatType)
	*p = x
	return p
}

func (x ActivityChatType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityChatType) Descriptor() protoreflect.EnumDescriptor {
	return file_widget_activity_proto_enumTypes[0].Descriptor()
}

func (ActivityChatType) Type() protoreflect.EnumType {
	return &file_widget_activity_proto_enumTypes[0]
}

func (x ActivityChatType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityChatType.Descriptor instead.
func (ActivityChatType) EnumDescriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{0}
}

type TaskType int32

const (
	TaskType_TaskTypeNone           TaskType = 0
	TaskType_TaskTypeTgInviteGroup  TaskType = 10
	TaskType_TaskTypeTgStartBot     TaskType = 11
	TaskType_TaskTypeTgJoinGroup    TaskType = 12
	TaskType_TaskTypeDcInviteServer TaskType = 20
	TaskType_TaskTypeDcJoinServer   TaskType = 21
	TaskType_TaskTypeBindMetaMask   TaskType = 30
	TaskType_TaskTypeTwitterFollow  TaskType = 40
	TaskType_TaskTypeTwitterTweet   TaskType = 41
)

// Enum value maps for TaskType.
var (
	TaskType_name = map[int32]string{
		0:  "TaskTypeNone",
		10: "TaskTypeTgInviteGroup",
		11: "TaskTypeTgStartBot",
		12: "TaskTypeTgJoinGroup",
		20: "TaskTypeDcInviteServer",
		21: "TaskTypeDcJoinServer",
		30: "TaskTypeBindMetaMask",
		40: "TaskTypeTwitterFollow",
		41: "TaskTypeTwitterTweet",
	}
	TaskType_value = map[string]int32{
		"TaskTypeNone":           0,
		"TaskTypeTgInviteGroup":  10,
		"TaskTypeTgStartBot":     11,
		"TaskTypeTgJoinGroup":    12,
		"TaskTypeDcInviteServer": 20,
		"TaskTypeDcJoinServer":   21,
		"TaskTypeBindMetaMask":   30,
		"TaskTypeTwitterFollow":  40,
		"TaskTypeTwitterTweet":   41,
	}
)

func (x TaskType) Enum() *TaskType {
	p := new(TaskType)
	*p = x
	return p
}

func (x TaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_widget_activity_proto_enumTypes[1].Descriptor()
}

func (TaskType) Type() protoreflect.EnumType {
	return &file_widget_activity_proto_enumTypes[1]
}

func (x TaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskType.Descriptor instead.
func (TaskType) EnumDescriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{1}
}

type AwardType int32

const (
	AwardType_AwardTypeNone AwardType = 0
	//Native token
	AwardType_AwardTypeETH AwardType = 1
	//Erc20 token
	AwardType_AwardTypeERC20 AwardType = 2
	//NFT Token
	AwardType_AwardTypeNFT AwardType = 3
)

// Enum value maps for AwardType.
var (
	AwardType_name = map[int32]string{
		0: "AwardTypeNone",
		1: "AwardTypeETH",
		2: "AwardTypeERC20",
		3: "AwardTypeNFT",
	}
	AwardType_value = map[string]int32{
		"AwardTypeNone":  0,
		"AwardTypeETH":   1,
		"AwardTypeERC20": 2,
		"AwardTypeNFT":   3,
	}
)

func (x AwardType) Enum() *AwardType {
	p := new(AwardType)
	*p = x
	return p
}

func (x AwardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AwardType) Descriptor() protoreflect.EnumDescriptor {
	return file_widget_activity_proto_enumTypes[2].Descriptor()
}

func (AwardType) Type() protoreflect.EnumType {
	return &file_widget_activity_proto_enumTypes[2]
}

func (x AwardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AwardType.Descriptor instead.
func (AwardType) EnumDescriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{2}
}

type ActivityStatus int32

const (
	ActivityStatus_ActivityNone        ActivityStatus = 0
	ActivityStatus_ActivityReady       ActivityStatus = 1
	ActivityStatus_ActivityPending     ActivityStatus = 2
	ActivityStatus_ActivityOver        ActivityStatus = 3
	ActivityStatus_ActivityStarting    ActivityStatus = 21
	ActivityStatus_ActivityOvering     ActivityStatus = 22
	ActivityStatus_ActivityStartFailed ActivityStatus = 31
	ActivityStatus_ActivityOverFailed  ActivityStatus = 32
)

// Enum value maps for ActivityStatus.
var (
	ActivityStatus_name = map[int32]string{
		0:  "ActivityNone",
		1:  "ActivityReady",
		2:  "ActivityPending",
		3:  "ActivityOver",
		21: "ActivityStarting",
		22: "ActivityOvering",
		31: "ActivityStartFailed",
		32: "ActivityOverFailed",
	}
	ActivityStatus_value = map[string]int32{
		"ActivityNone":        0,
		"ActivityReady":       1,
		"ActivityPending":     2,
		"ActivityOver":        3,
		"ActivityStarting":    21,
		"ActivityOvering":     22,
		"ActivityStartFailed": 31,
		"ActivityOverFailed":  32,
	}
)

func (x ActivityStatus) Enum() *ActivityStatus {
	p := new(ActivityStatus)
	*p = x
	return p
}

func (x ActivityStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivityStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_widget_activity_proto_enumTypes[3].Descriptor()
}

func (ActivityStatus) Type() protoreflect.EnumType {
	return &file_widget_activity_proto_enumTypes[3]
}

func (x ActivityStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActivityStatus.Descriptor instead.
func (ActivityStatus) EnumDescriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{3}
}

type Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Creator string `protobuf:"bytes,2,opt,name=creator,proto3" json:"creator,omitempty"`
	AppId   string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Title   string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Photo   string `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo,omitempty"`
	Desc    string `protobuf:"bytes,6,opt,name=desc,proto3" json:"desc,omitempty"`
	//前端传，task 总score
	TotalScore int64 `protobuf:"varint,13,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	StartTime  int64 `protobuf:"varint,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime    int64 `protobuf:"varint,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	//activity h5 url
	Url    string         `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`
	Status ActivityStatus `protobuf:"varint,10,opt,name=status,proto3,enum=proto.ActivityStatus" json:"status,omitempty"`
	Sent   bool           `protobuf:"varint,11,opt,name=sent,proto3" json:"sent,omitempty"`
	//activity 发送到群里
	SendGroup *SendGroup `protobuf:"bytes,12,opt,name=send_group,json=sendGroup,proto3" json:"send_group,omitempty"`
	Threshold int64      `protobuf:"varint,18,opt,name=threshold,proto3" json:"threshold,omitempty"`
	AwardList *AwardList `protobuf:"bytes,15,opt,name=award_list,json=awardList,proto3" json:"award_list,omitempty"`
	AwardId   uint64     `protobuf:"varint,16,opt,name=award_id,json=awardId,proto3" json:"award_id,omitempty"`
	TxHash    string     `protobuf:"bytes,20,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
}

func (x *Activity) Reset() {
	*x = Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{0}
}

func (x *Activity) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Activity) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Activity) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Activity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Activity) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *Activity) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Activity) GetTotalScore() int64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *Activity) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *Activity) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *Activity) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Activity) GetStatus() ActivityStatus {
	if x != nil {
		return x.Status
	}
	return ActivityStatus_ActivityNone
}

func (x *Activity) GetSent() bool {
	if x != nil {
		return x.Sent
	}
	return false
}

func (x *Activity) GetSendGroup() *SendGroup {
	if x != nil {
		return x.SendGroup
	}
	return nil
}

func (x *Activity) GetThreshold() int64 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *Activity) GetAwardList() *AwardList {
	if x != nil {
		return x.AwardList
	}
	return nil
}

func (x *Activity) GetAwardId() uint64 {
	if x != nil {
		return x.AwardId
	}
	return 0
}

func (x *Activity) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type SendGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// k-群组id v-type tg:1 dc:2
	SendTo map[string]ActivityChatType `protobuf:"bytes,12,rep,name=send_to,json=sendTo,proto3" json:"send_to,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=proto.ActivityChatType"`
}

func (x *SendGroup) Reset() {
	*x = SendGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGroup) ProtoMessage() {}

func (x *SendGroup) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGroup.ProtoReflect.Descriptor instead.
func (*SendGroup) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{1}
}

func (x *SendGroup) GetSendTo() map[string]ActivityChatType {
	if x != nil {
		return x.SendTo
	}
	return nil
}

type GetActivityWinnerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	BotType    int32  `protobuf:"varint,2,opt,name=bot_type,json=botType,proto3" json:"bot_type,omitempty"`
	Page       int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetActivityWinnerReq) Reset() {
	*x = GetActivityWinnerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityWinnerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityWinnerReq) ProtoMessage() {}

func (x *GetActivityWinnerReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityWinnerReq.ProtoReflect.Descriptor instead.
func (*GetActivityWinnerReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{2}
}

func (x *GetActivityWinnerReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetActivityWinnerReq) GetBotType() int32 {
	if x != nil {
		return x.BotType
	}
	return 0
}

func (x *GetActivityWinnerReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetActivityWinnerReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ActivityWinner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivityId    uint64 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	TotalScore    uint64 `protobuf:"varint,4,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	AwardSequence int32  `protobuf:"varint,5,opt,name=award_sequence,json=awardSequence,proto3" json:"award_sequence,omitempty"` //  string name = 6;
}

func (x *ActivityWinner) Reset() {
	*x = ActivityWinner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityWinner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityWinner) ProtoMessage() {}

func (x *ActivityWinner) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityWinner.ProtoReflect.Descriptor instead.
func (*ActivityWinner) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityWinner) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityWinner) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ActivityWinner) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *ActivityWinner) GetTotalScore() uint64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *ActivityWinner) GetAwardSequence() int32 {
	if x != nil {
		return x.AwardSequence
	}
	return 0
}

type GetActivityWinnerResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*ActivityWinner   `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetActivityWinnerResp) Reset() {
	*x = GetActivityWinnerResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityWinnerResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityWinnerResp) ProtoMessage() {}

func (x *GetActivityWinnerResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityWinnerResp.ProtoReflect.Descriptor instead.
func (*GetActivityWinnerResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{4}
}

func (x *GetActivityWinnerResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetActivityWinnerResp) GetData() []*ActivityWinner {
	if x != nil {
		return x.Data
	}
	return nil
}

type AwardList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AwardInfoList []*AwardInfo `protobuf:"bytes,1,rep,name=award_info_list,json=awardInfoList,proto3" json:"award_info_list,omitempty"`
}

func (x *AwardList) Reset() {
	*x = AwardList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardList) ProtoMessage() {}

func (x *AwardList) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardList.ProtoReflect.Descriptor instead.
func (*AwardList) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{5}
}

func (x *AwardList) GetAwardInfoList() []*AwardInfo {
	if x != nil {
		return x.AwardInfoList
	}
	return nil
}

type AwardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//奖励人数
	WinnerCount int64 `protobuf:"varint,1,opt,name=winner_count,json=winnerCount,proto3" json:"winner_count,omitempty"`
	//奖励类型
	AwardType AwardType `protobuf:"varint,2,opt,name=award_type,json=awardType,proto3,enum=proto.AwardType" json:"award_type,omitempty"`
	//奖励描述
	AwardName string `protobuf:"bytes,3,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
	//奖励数量
	AwardAmount int64 `protobuf:"varint,4,opt,name=award_amount,json=awardAmount,proto3" json:"award_amount,omitempty"`
	// 最低奖励阈值
	Threshold int32 `protobuf:"varint,5,opt,name=threshold,proto3" json:"threshold,omitempty"`
	//token address
	Address string `protobuf:"bytes,6,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *AwardInfo) Reset() {
	*x = AwardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwardInfo) ProtoMessage() {}

func (x *AwardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwardInfo.ProtoReflect.Descriptor instead.
func (*AwardInfo) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{6}
}

func (x *AwardInfo) GetWinnerCount() int64 {
	if x != nil {
		return x.WinnerCount
	}
	return 0
}

func (x *AwardInfo) GetAwardType() AwardType {
	if x != nil {
		return x.AwardType
	}
	return AwardType_AwardTypeNone
}

func (x *AwardInfo) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

func (x *AwardInfo) GetAwardAmount() int64 {
	if x != nil {
		return x.AwardAmount
	}
	return 0
}

func (x *AwardInfo) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *AwardInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type TaskTgInviteGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,5,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	//群组url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	//邀请链接
	InviteUrl string `protobuf:"bytes,2,opt,name=invite_url,json=inviteUrl,proto3" json:"invite_url,omitempty"`
	GroupId   string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	//被邀请user信息
	InvitedUsers []*ActivityUserInfo `protobuf:"bytes,4,rep,name=invited_users,json=invitedUsers,proto3" json:"invited_users,omitempty"`
}

func (x *TaskTgInviteGroup) Reset() {
	*x = TaskTgInviteGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTgInviteGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTgInviteGroup) ProtoMessage() {}

func (x *TaskTgInviteGroup) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTgInviteGroup.ProtoReflect.Descriptor instead.
func (*TaskTgInviteGroup) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{7}
}

func (x *TaskTgInviteGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *TaskTgInviteGroup) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskTgInviteGroup) GetInviteUrl() string {
	if x != nil {
		return x.InviteUrl
	}
	return ""
}

func (x *TaskTgInviteGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *TaskTgInviteGroup) GetInvitedUsers() []*ActivityUserInfo {
	if x != nil {
		return x.InvitedUsers
	}
	return nil
}

type TaskTwitterFollow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter       bool   `protobuf:"varint,1,opt,name=filter,proto3" json:"filter,omitempty"`
	TwitterId    string `protobuf:"bytes,2,opt,name=twitter_id,json=twitterId,proto3" json:"twitter_id,omitempty"`
	MinFollowers int64  `protobuf:"varint,3,opt,name=min_followers,json=minFollowers,proto3" json:"min_followers,omitempty"`
	MinAge       int64  `protobuf:"varint,4,opt,name=min_age,json=minAge,proto3" json:"min_age,omitempty"`
}

func (x *TaskTwitterFollow) Reset() {
	*x = TaskTwitterFollow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTwitterFollow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTwitterFollow) ProtoMessage() {}

func (x *TaskTwitterFollow) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTwitterFollow.ProtoReflect.Descriptor instead.
func (*TaskTwitterFollow) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{8}
}

func (x *TaskTwitterFollow) GetFilter() bool {
	if x != nil {
		return x.Filter
	}
	return false
}

func (x *TaskTwitterFollow) GetTwitterId() string {
	if x != nil {
		return x.TwitterId
	}
	return ""
}

func (x *TaskTwitterFollow) GetMinFollowers() int64 {
	if x != nil {
		return x.MinFollowers
	}
	return 0
}

func (x *TaskTwitterFollow) GetMinAge() int64 {
	if x != nil {
		return x.MinAge
	}
	return 0
}

type TaskTwitterRetweet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter       bool   `protobuf:"varint,1,opt,name=filter,proto3" json:"filter,omitempty"`
	TweetUrl     string `protobuf:"bytes,2,opt,name=tweet_url,json=tweetUrl,proto3" json:"tweet_url,omitempty"`
	MinFollowers int64  `protobuf:"varint,3,opt,name=min_followers,json=minFollowers,proto3" json:"min_followers,omitempty"`
	MinAge       int64  `protobuf:"varint,4,opt,name=min_age,json=minAge,proto3" json:"min_age,omitempty"`
}

func (x *TaskTwitterRetweet) Reset() {
	*x = TaskTwitterRetweet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTwitterRetweet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTwitterRetweet) ProtoMessage() {}

func (x *TaskTwitterRetweet) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTwitterRetweet.ProtoReflect.Descriptor instead.
func (*TaskTwitterRetweet) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{9}
}

func (x *TaskTwitterRetweet) GetFilter() bool {
	if x != nil {
		return x.Filter
	}
	return false
}

func (x *TaskTwitterRetweet) GetTweetUrl() string {
	if x != nil {
		return x.TweetUrl
	}
	return ""
}

func (x *TaskTwitterRetweet) GetMinFollowers() int64 {
	if x != nil {
		return x.MinFollowers
	}
	return 0
}

func (x *TaskTwitterRetweet) GetMinAge() int64 {
	if x != nil {
		return x.MinAge
	}
	return 0
}

type TaskTgJoinGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupName string `protobuf:"bytes,1,opt,name=group_name,json=groupName,proto3" json:"group_name,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	GroupId   string `protobuf:"bytes,3,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
}

func (x *TaskTgJoinGroup) Reset() {
	*x = TaskTgJoinGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTgJoinGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTgJoinGroup) ProtoMessage() {}

func (x *TaskTgJoinGroup) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTgJoinGroup.ProtoReflect.Descriptor instead.
func (*TaskTgJoinGroup) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{10}
}

func (x *TaskTgJoinGroup) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *TaskTgJoinGroup) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskTgJoinGroup) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

type TaskDiscordJoinServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerName string `protobuf:"bytes,1,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	ServerId   string `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
}

func (x *TaskDiscordJoinServer) Reset() {
	*x = TaskDiscordJoinServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDiscordJoinServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDiscordJoinServer) ProtoMessage() {}

func (x *TaskDiscordJoinServer) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDiscordJoinServer.ProtoReflect.Descriptor instead.
func (*TaskDiscordJoinServer) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{11}
}

func (x *TaskDiscordJoinServer) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

func (x *TaskDiscordJoinServer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskDiscordJoinServer) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

type TaskDiscordInviteServer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url          string              `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	InviteUrl    string              `protobuf:"bytes,2,opt,name=invite_url,json=inviteUrl,proto3" json:"invite_url,omitempty"`
	ServerId     string              `protobuf:"bytes,3,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	InvitedUsers []*ActivityUserInfo `protobuf:"bytes,4,rep,name=invited_users,json=invitedUsers,proto3" json:"invited_users,omitempty"`
	ServerName   string              `protobuf:"bytes,5,opt,name=server_name,json=serverName,proto3" json:"server_name,omitempty"`
}

func (x *TaskDiscordInviteServer) Reset() {
	*x = TaskDiscordInviteServer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskDiscordInviteServer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskDiscordInviteServer) ProtoMessage() {}

func (x *TaskDiscordInviteServer) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskDiscordInviteServer.ProtoReflect.Descriptor instead.
func (*TaskDiscordInviteServer) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{12}
}

func (x *TaskDiscordInviteServer) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TaskDiscordInviteServer) GetInviteUrl() string {
	if x != nil {
		return x.InviteUrl
	}
	return ""
}

func (x *TaskDiscordInviteServer) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *TaskDiscordInviteServer) GetInvitedUsers() []*ActivityUserInfo {
	if x != nil {
		return x.InvitedUsers
	}
	return nil
}

func (x *TaskDiscordInviteServer) GetServerName() string {
	if x != nil {
		return x.ServerName
	}
	return ""
}

type ActivityUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//  string user_id = 1;
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar        string `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	OpenId        string `protobuf:"bytes,4,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	OpenType      int32  `protobuf:"varint,9,opt,name=open_type,json=openType,proto3" json:"open_type,omitempty"`
	TotalScore    uint64 `protobuf:"varint,6,opt,name=total_score,json=totalScore,proto3" json:"total_score,omitempty"`
	Address       string `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	AwardSequence int32  `protobuf:"varint,7,opt,name=award_sequence,json=awardSequence,proto3" json:"award_sequence,omitempty"`
	AwardName     string `protobuf:"bytes,10,opt,name=award_name,json=awardName,proto3" json:"award_name,omitempty"`
}

func (x *ActivityUserInfo) Reset() {
	*x = ActivityUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityUserInfo) ProtoMessage() {}

func (x *ActivityUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityUserInfo.ProtoReflect.Descriptor instead.
func (*ActivityUserInfo) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{13}
}

func (x *ActivityUserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ActivityUserInfo) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ActivityUserInfo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *ActivityUserInfo) GetOpenType() int32 {
	if x != nil {
		return x.OpenType
	}
	return 0
}

func (x *ActivityUserInfo) GetTotalScore() uint64 {
	if x != nil {
		return x.TotalScore
	}
	return 0
}

func (x *ActivityUserInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ActivityUserInfo) GetAwardSequence() int32 {
	if x != nil {
		return x.AwardSequence
	}
	return 0
}

func (x *ActivityUserInfo) GetAwardName() string {
	if x != nil {
		return x.AwardName
	}
	return ""
}

type TaskBindWallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter        bool  `protobuf:"varint,1,opt,name=filter,proto3" json:"filter,omitempty"`
	ChainType     int64 `protobuf:"varint,2,opt,name=chain_type,json=chainType,proto3" json:"chain_type,omitempty"`
	FilterEth     bool  `protobuf:"varint,3,opt,name=filter_eth,json=filterEth,proto3" json:"filter_eth,omitempty"`
	RequireAmount int64 `protobuf:"varint,4,opt,name=require_amount,json=requireAmount,proto3" json:"require_amount,omitempty"`
}

func (x *TaskBindWallet) Reset() {
	*x = TaskBindWallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskBindWallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskBindWallet) ProtoMessage() {}

func (x *TaskBindWallet) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskBindWallet.ProtoReflect.Descriptor instead.
func (*TaskBindWallet) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{14}
}

func (x *TaskBindWallet) GetFilter() bool {
	if x != nil {
		return x.Filter
	}
	return false
}

func (x *TaskBindWallet) GetChainType() int64 {
	if x != nil {
		return x.ChainType
	}
	return 0
}

func (x *TaskBindWallet) GetFilterEth() bool {
	if x != nil {
		return x.FilterEth
	}
	return false
}

func (x *TaskBindWallet) GetRequireAmount() int64 {
	if x != nil {
		return x.RequireAmount
	}
	return 0
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ActivityId uint64 `protobuf:"varint,2,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Score      int64  `protobuf:"varint,3,opt,name=score,proto3" json:"score,omitempty"`
	Desc       string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Category   string `protobuf:"bytes,5,opt,name=category,proto3" json:"category,omitempty"`
	Target     int64  `protobuf:"varint,6,opt,name=target,proto3" json:"target,omitempty"`
	AppId      string `protobuf:"bytes,7,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// different tasks have different type
	TaskType      TaskType                 `protobuf:"varint,10,opt,name=task_type,json=taskType,proto3,enum=proto.TaskType" json:"task_type,omitempty"`
	TgInvite      *TaskTgInviteGroup       `protobuf:"bytes,21,opt,name=tg_invite,json=tgInvite,proto3" json:"tg_invite,omitempty"`
	TgJoinGroup   *TaskTgJoinGroup         `protobuf:"bytes,22,opt,name=tg_join_group,json=tgJoinGroup,proto3" json:"tg_join_group,omitempty"`
	DiscordInvite *TaskDiscordInviteServer `protobuf:"bytes,31,opt,name=discord_invite,json=discordInvite,proto3" json:"discord_invite,omitempty"`
	DiscordJoin   *TaskDiscordJoinServer   `protobuf:"bytes,32,opt,name=discord_join,json=discordJoin,proto3" json:"discord_join,omitempty"`
	TwitterFollow *TaskTwitterFollow       `protobuf:"bytes,41,opt,name=twitter_follow,json=twitterFollow,proto3" json:"twitter_follow,omitempty"`
	Retweet       *TaskTwitterRetweet      `protobuf:"bytes,42,opt,name=retweet,proto3" json:"retweet,omitempty"`
	BindWallet    *TaskBindWallet          `protobuf:"bytes,51,opt,name=bind_wallet,json=bindWallet,proto3" json:"bind_wallet,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{15}
}

func (x *Task) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Task) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *Task) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Task) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Task) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *Task) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *Task) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *Task) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TaskTypeNone
}

func (x *Task) GetTgInvite() *TaskTgInviteGroup {
	if x != nil {
		return x.TgInvite
	}
	return nil
}

func (x *Task) GetTgJoinGroup() *TaskTgJoinGroup {
	if x != nil {
		return x.TgJoinGroup
	}
	return nil
}

func (x *Task) GetDiscordInvite() *TaskDiscordInviteServer {
	if x != nil {
		return x.DiscordInvite
	}
	return nil
}

func (x *Task) GetDiscordJoin() *TaskDiscordJoinServer {
	if x != nil {
		return x.DiscordJoin
	}
	return nil
}

func (x *Task) GetTwitterFollow() *TaskTwitterFollow {
	if x != nil {
		return x.TwitterFollow
	}
	return nil
}

func (x *Task) GetRetweet() *TaskTwitterRetweet {
	if x != nil {
		return x.Retweet
	}
	return nil
}

func (x *Task) GetBindWallet() *TaskBindWallet {
	if x != nil {
		return x.BindWallet
	}
	return nil
}

type UserTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AppId      string `protobuf:"bytes,13,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	ActivityId uint64 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	TaskId     uint64 `protobuf:"varint,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Desc       string `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Category   string `protobuf:"bytes,6,opt,name=category,proto3" json:"category,omitempty"`
	Score      int64  `protobuf:"varint,7,opt,name=score,proto3" json:"score,omitempty"`
	Target     int64  `protobuf:"varint,8,opt,name=target,proto3" json:"target,omitempty"`
	Current    int64  `protobuf:"varint,9,opt,name=current,proto3" json:"current,omitempty"`
	Completed  bool   `protobuf:"varint,10,opt,name=completed,proto3" json:"completed,omitempty"`
	// different tasks have different type
	TaskType      TaskType                 `protobuf:"varint,11,opt,name=task_type,json=taskType,proto3,enum=proto.TaskType" json:"task_type,omitempty"`
	KeyValue      string                   `protobuf:"bytes,14,opt,name=key_value,json=keyValue,proto3" json:"key_value,omitempty"`
	TgInvite      *TaskTgInviteGroup       `protobuf:"bytes,21,opt,name=tg_invite,json=tgInvite,proto3" json:"tg_invite,omitempty"`
	TgJoinGroup   *TaskTgJoinGroup         `protobuf:"bytes,22,opt,name=tg_join_group,json=tgJoinGroup,proto3" json:"tg_join_group,omitempty"`
	DiscordInvite *TaskDiscordInviteServer `protobuf:"bytes,31,opt,name=discord_invite,json=discordInvite,proto3" json:"discord_invite,omitempty"`
	DiscordJoin   *TaskDiscordJoinServer   `protobuf:"bytes,32,opt,name=discord_join,json=discordJoin,proto3" json:"discord_join,omitempty"`
	TwitterFollow *TaskTwitterFollow       `protobuf:"bytes,41,opt,name=twitter_follow,json=twitterFollow,proto3" json:"twitter_follow,omitempty"`
	Retweet       *TaskTwitterRetweet      `protobuf:"bytes,42,opt,name=retweet,proto3" json:"retweet,omitempty"`
	BindWallet    *TaskBindWallet          `protobuf:"bytes,51,opt,name=bind_wallet,json=bindWallet,proto3" json:"bind_wallet,omitempty"`
}

func (x *UserTask) Reset() {
	*x = UserTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTask) ProtoMessage() {}

func (x *UserTask) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTask.ProtoReflect.Descriptor instead.
func (*UserTask) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{16}
}

func (x *UserTask) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserTask) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UserTask) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserTask) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *UserTask) GetTaskId() uint64 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *UserTask) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *UserTask) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *UserTask) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UserTask) GetTarget() int64 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *UserTask) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *UserTask) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *UserTask) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TaskTypeNone
}

func (x *UserTask) GetKeyValue() string {
	if x != nil {
		return x.KeyValue
	}
	return ""
}

func (x *UserTask) GetTgInvite() *TaskTgInviteGroup {
	if x != nil {
		return x.TgInvite
	}
	return nil
}

func (x *UserTask) GetTgJoinGroup() *TaskTgJoinGroup {
	if x != nil {
		return x.TgJoinGroup
	}
	return nil
}

func (x *UserTask) GetDiscordInvite() *TaskDiscordInviteServer {
	if x != nil {
		return x.DiscordInvite
	}
	return nil
}

func (x *UserTask) GetDiscordJoin() *TaskDiscordJoinServer {
	if x != nil {
		return x.DiscordJoin
	}
	return nil
}

func (x *UserTask) GetTwitterFollow() *TaskTwitterFollow {
	if x != nil {
		return x.TwitterFollow
	}
	return nil
}

func (x *UserTask) GetRetweet() *TaskTwitterRetweet {
	if x != nil {
		return x.Retweet
	}
	return nil
}

func (x *UserTask) GetBindWallet() *TaskBindWallet {
	if x != nil {
		return x.BindWallet
	}
	return nil
}

type GetTaskTemplateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTaskTemplateReq) Reset() {
	*x = GetTaskTemplateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskTemplateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskTemplateReq) ProtoMessage() {}

func (x *GetTaskTemplateReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskTemplateReq.ProtoReflect.Descriptor instead.
func (*GetTaskTemplateReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{17}
}

type TaskTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Desc      string   `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Category  string   `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	TaskType  TaskType `protobuf:"varint,4,opt,name=task_type,json=taskType,proto3,enum=proto.TaskType" json:"task_type,omitempty"`
	Available bool     `protobuf:"varint,5,opt,name=available,proto3" json:"available,omitempty"`
}

func (x *TaskTemplate) Reset() {
	*x = TaskTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskTemplate) ProtoMessage() {}

func (x *TaskTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskTemplate.ProtoReflect.Descriptor instead.
func (*TaskTemplate) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{18}
}

func (x *TaskTemplate) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TaskTemplate) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *TaskTemplate) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *TaskTemplate) GetTaskType() TaskType {
	if x != nil {
		return x.TaskType
	}
	return TaskType_TaskTypeNone
}

func (x *TaskTemplate) GetAvailable() bool {
	if x != nil {
		return x.Available
	}
	return false
}

type GetTaskTemplateResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  []*TaskTemplate     `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskTemplateResp) Reset() {
	*x = GetTaskTemplateResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskTemplateResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskTemplateResp) ProtoMessage() {}

func (x *GetTaskTemplateResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskTemplateResp.ProtoReflect.Descriptor instead.
func (*GetTaskTemplateResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{19}
}

func (x *GetTaskTemplateResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTaskTemplateResp) GetData() []*TaskTemplate {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTaskActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator    string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AppId      string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ActivityId uint64 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *GetTaskActivityReq) Reset() {
	*x = GetTaskActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskActivityReq) ProtoMessage() {}

func (x *GetTaskActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskActivityReq.ProtoReflect.Descriptor instead.
func (*GetTaskActivityReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{20}
}

func (x *GetTaskActivityReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *GetTaskActivityReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetTaskActivityReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type GetTaskActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *TaskActivityData   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskActivityResp) Reset() {
	*x = GetTaskActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskActivityResp) ProtoMessage() {}

func (x *GetTaskActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskActivityResp.ProtoReflect.Descriptor instead.
func (*GetTaskActivityResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{21}
}

func (x *GetTaskActivityResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTaskActivityResp) GetData() *TaskActivityData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetTaskActivityListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Creator string         `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	AppId   string         `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	Status  ActivityStatus `protobuf:"varint,3,opt,name=status,proto3,enum=proto.ActivityStatus" json:"status,omitempty"`
	Page    int64          `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	Limit   int64          `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetTaskActivityListReq) Reset() {
	*x = GetTaskActivityListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskActivityListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskActivityListReq) ProtoMessage() {}

func (x *GetTaskActivityListReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskActivityListReq.ProtoReflect.Descriptor instead.
func (*GetTaskActivityListReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{22}
}

func (x *GetTaskActivityListReq) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *GetTaskActivityListReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetTaskActivityListReq) GetStatus() ActivityStatus {
	if x != nil {
		return x.Status
	}
	return ActivityStatus_ActivityNone
}

func (x *GetTaskActivityListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTaskActivityListReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetTaskActivityListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *ActivityListRespData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetTaskActivityListResp) Reset() {
	*x = GetTaskActivityListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTaskActivityListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskActivityListResp) ProtoMessage() {}

func (x *GetTaskActivityListResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskActivityListResp.ProtoReflect.Descriptor instead.
func (*GetTaskActivityListResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{23}
}

func (x *GetTaskActivityListResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetTaskActivityListResp) GetData() *ActivityListRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActivityListRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount int64               `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	List       []*TaskActivityData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ActivityListRespData) Reset() {
	*x = ActivityListRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityListRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityListRespData) ProtoMessage() {}

func (x *ActivityListRespData) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityListRespData.ProtoReflect.Descriptor instead.
func (*ActivityListRespData) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{24}
}

func (x *ActivityListRespData) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ActivityListRespData) GetList() []*TaskActivityData {
	if x != nil {
		return x.List
	}
	return nil
}

type TaskActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,2,opt,name=activity,proto3" json:"activity,omitempty"`
	Tasks    []*Task   `protobuf:"bytes,3,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *TaskActivityData) Reset() {
	*x = TaskActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskActivityData) ProtoMessage() {}

func (x *TaskActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskActivityData.ProtoReflect.Descriptor instead.
func (*TaskActivityData) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{25}
}

func (x *TaskActivityData) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *TaskActivityData) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type SaveTaskActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Activity *Activity `protobuf:"bytes,1,opt,name=activity,proto3" json:"activity,omitempty"`
	Tasks    []*Task   `protobuf:"bytes,2,rep,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *SaveTaskActivityReq) Reset() {
	*x = SaveTaskActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTaskActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTaskActivityReq) ProtoMessage() {}

func (x *SaveTaskActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTaskActivityReq.ProtoReflect.Descriptor instead.
func (*SaveTaskActivityReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{26}
}

func (x *SaveTaskActivityReq) GetActivity() *Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *SaveTaskActivityReq) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type SaveTaskActivityResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  uint64              `protobuf:"varint,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SaveTaskActivityResp) Reset() {
	*x = SaveTaskActivityResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveTaskActivityResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveTaskActivityResp) ProtoMessage() {}

func (x *SaveTaskActivityResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveTaskActivityResp.ProtoReflect.Descriptor instead.
func (*SaveTaskActivityResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{27}
}

func (x *SaveTaskActivityResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *SaveTaskActivityResp) GetData() uint64 {
	if x != nil {
		return x.Data
	}
	return 0
}

type UserTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AppId      string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	ActivityId uint64 `protobuf:"varint,3,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
}

func (x *UserTaskReq) Reset() {
	*x = UserTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskReq) ProtoMessage() {}

func (x *UserTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskReq.ProtoReflect.Descriptor instead.
func (*UserTaskReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{28}
}

func (x *UserTaskReq) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserTaskReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *UserTaskReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

type UserTaskResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *UserTaskData       `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UserTaskResp) Reset() {
	*x = UserTaskResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskResp) ProtoMessage() {}

func (x *UserTaskResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskResp.ProtoReflect.Descriptor instead.
func (*UserTaskResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{29}
}

func (x *UserTaskResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *UserTaskResp) GetData() *UserTaskData {
	if x != nil {
		return x.Data
	}
	return nil
}

type UserTaskData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Task []*UserTask `protobuf:"bytes,1,rep,name=task,proto3" json:"task,omitempty"`
}

func (x *UserTaskData) Reset() {
	*x = UserTaskData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserTaskData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserTaskData) ProtoMessage() {}

func (x *UserTaskData) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserTaskData.ProtoReflect.Descriptor instead.
func (*UserTaskData) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{30}
}

func (x *UserTaskData) GetTask() []*UserTask {
	if x != nil {
		return x.Task
	}
	return nil
}

type GetActivityParticipatesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	AppId      string `protobuf:"bytes,2,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	BotType    int32  `protobuf:"varint,5,opt,name=bot_type,json=botType,proto3" json:"bot_type,omitempty"`
	Page       int64  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	Limit      int64  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetActivityParticipatesReq) Reset() {
	*x = GetActivityParticipatesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityParticipatesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityParticipatesReq) ProtoMessage() {}

func (x *GetActivityParticipatesReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityParticipatesReq.ProtoReflect.Descriptor instead.
func (*GetActivityParticipatesReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{31}
}

func (x *GetActivityParticipatesReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *GetActivityParticipatesReq) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *GetActivityParticipatesReq) GetBotType() int32 {
	if x != nil {
		return x.BotType
	}
	return 0
}

func (x *GetActivityParticipatesReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetActivityParticipatesReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetActivityParticipatesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *WidgetErrorMessage       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Data  *ActivityParticipatesData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetActivityParticipatesResp) Reset() {
	*x = GetActivityParticipatesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetActivityParticipatesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActivityParticipatesResp) ProtoMessage() {}

func (x *GetActivityParticipatesResp) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActivityParticipatesResp.ProtoReflect.Descriptor instead.
func (*GetActivityParticipatesResp) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{32}
}

func (x *GetActivityParticipatesResp) GetError() *WidgetErrorMessage {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *GetActivityParticipatesResp) GetData() *ActivityParticipatesData {
	if x != nil {
		return x.Data
	}
	return nil
}

type ActivityParticipatesData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCount   int64               `protobuf:"varint,1,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Participates []*ActivityUserInfo `protobuf:"bytes,2,rep,name=participates,proto3" json:"participates,omitempty"`
}

func (x *ActivityParticipatesData) Reset() {
	*x = ActivityParticipatesData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityParticipatesData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityParticipatesData) ProtoMessage() {}

func (x *ActivityParticipatesData) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityParticipatesData.ProtoReflect.Descriptor instead.
func (*ActivityParticipatesData) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{33}
}

func (x *ActivityParticipatesData) GetTotalCount() int64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ActivityParticipatesData) GetParticipates() []*ActivityUserInfo {
	if x != nil {
		return x.Participates
	}
	return nil
}

type UpdateUserTaskReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids           []uint64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	Id            uint64   `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	InvitedOpenId string   `protobuf:"bytes,3,opt,name=invited_open_id,json=invitedOpenId,proto3" json:"invited_open_id,omitempty"`
}

func (x *UpdateUserTaskReq) Reset() {
	*x = UpdateUserTaskReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserTaskReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserTaskReq) ProtoMessage() {}

func (x *UpdateUserTaskReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserTaskReq.ProtoReflect.Descriptor instead.
func (*UpdateUserTaskReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateUserTaskReq) GetIds() []uint64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UpdateUserTaskReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateUserTaskReq) GetInvitedOpenId() string {
	if x != nil {
		return x.InvitedOpenId
	}
	return ""
}

type SetActivityUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActivityId uint64 `protobuf:"varint,1,opt,name=activity_id,json=activityId,proto3" json:"activity_id,omitempty"`
	Url        string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *SetActivityUrlReq) Reset() {
	*x = SetActivityUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_widget_activity_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetActivityUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetActivityUrlReq) ProtoMessage() {}

func (x *SetActivityUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_widget_activity_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetActivityUrlReq.ProtoReflect.Descriptor instead.
func (*SetActivityUrlReq) Descriptor() ([]byte, []int) {
	return file_widget_activity_proto_rawDescGZIP(), []int{35}
}

func (x *SetActivityUrlReq) GetActivityId() uint64 {
	if x != nil {
		return x.ActivityId
	}
	return 0
}

func (x *SetActivityUrlReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_widget_activity_proto protoreflect.FileDescriptor

var file_widget_activity_proto_rawDesc = []byte{
	0x0a, 0x15, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12,
	0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xef, 0x03, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x2d, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12,
	0x2f, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x77, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x61, 0x77, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x78,
	0x48, 0x61, 0x73, 0x68, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x35, 0x0a, 0x07, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x6f, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x6f, 0x1a, 0x52, 0x0a, 0x0b, 0x53, 0x65, 0x6e,
	0x64, 0x54, 0x6f, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7c, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x69, 0x6e, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xa2, 0x01, 0x0a, 0x0e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x72, 0x64, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x22, 0x73, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57,
	0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x45, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x38, 0x0a, 0x0f, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61,
	0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xd9, 0x01, 0x0a,
	0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69,
	0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x77, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a,
	0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x77, 0x61, 0x72, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbc, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73,
	0x6b, 0x54, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1d,
	0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x19,
	0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x54, 0x61, 0x73, 0x6b,
	0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e,
	0x5f, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x41,
	0x67, 0x65, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x77, 0x65, 0x65, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x77, 0x65, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x41, 0x67, 0x65, 0x22, 0x5d, 0x0a, 0x0f,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12,
	0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x15, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x49, 0x64, 0x22, 0xc6, 0x01, 0x0a, 0x17, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3c,
	0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xf5, 0x01,
	0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x77, 0x61, 0x72, 0x64, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x77, 0x61, 0x72, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x77, 0x61, 0x72,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x69,
	0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x65, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x83, 0x05, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x08, 0x74, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x67, 0x5f,
	0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x67, 0x4a,
	0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x74, 0x67, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64,
	0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x0c,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x3f, 0x0a,
	0x0e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18,
	0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x0d, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x33,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x52, 0x07, 0x72, 0x65, 0x74, 0x77,
	0x65, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52,
	0x0a, 0x62, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x8e, 0x06, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73,
	0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61,
	0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x74, 0x67, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x52, 0x08, 0x74, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x74, 0x67,
	0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x67,
	0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0b, 0x74, 0x67, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x45, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x12, 0x3f, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x72, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x3f,
	0x0a, 0x0e, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x52, 0x0d, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12,
	0x33, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x77, 0x69,
	0x74, 0x74, 0x65, 0x72, 0x52, 0x65, 0x74, 0x77, 0x65, 0x65, 0x74, 0x52, 0x07, 0x72, 0x65, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x42, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x0a, 0x62, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x74, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x66, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa2, 0x01,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x7b, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x64, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x62, 0x0a, 0x10, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x65, 0x0a, 0x13, 0x53, 0x61, 0x76,
	0x65, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x2b, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a,
	0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73,
	0x22, 0x5b, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5e, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x22, 0x68, 0x0a,
	0x0c, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x33, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x54,
	0x61, 0x73, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x22, 0x99, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6f, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x6f, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x83, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2f, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78,
	0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x69, 0x70, 0x61, 0x74, 0x65, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x64, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x2a,
	0x44, 0x0a, 0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x68, 0x61, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x54, 0x67, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x44, 0x43, 0x10, 0x02, 0x2a, 0xed, 0x01, 0x0a, 0x08, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f,
	0x6e, 0x65, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65,
	0x54, 0x67, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x0a, 0x12,
	0x16, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x54, 0x67, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x42, 0x6f, 0x74, 0x10, 0x0b, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x61, 0x73, 0x6b, 0x54,
	0x79, 0x70, 0x65, 0x54, 0x67, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x10, 0x0c,
	0x12, 0x1a, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x44, 0x63, 0x49, 0x6e,
	0x76, 0x69, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14,
	0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x44, 0x63, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x10, 0x15, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x4d, 0x61, 0x73, 0x6b, 0x10, 0x1e,
	0x12, 0x19, 0x0a, 0x15, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x54, 0x77, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x28, 0x12, 0x18, 0x0a, 0x14, 0x54,
	0x61, 0x73, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x10, 0x29, 0x2a, 0x56, 0x0a, 0x09, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x54, 0x48, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x77, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x52, 0x43, 0x32, 0x30, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x41,
	0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x46, 0x54, 0x10, 0x03, 0x2a, 0xb8, 0x01,
	0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x6f, 0x6e, 0x65,
	0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x61, 0x64, 0x79, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x10, 0x15, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x76,
	0x65, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x16, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x1f,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4f, 0x76, 0x65, 0x72,
	0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x20, 0x42, 0x16, 0x5a, 0x14, 0x77, 0x69, 0x64, 0x67,
	0x65, 0x74, 0x5f, 0x70, 0x62, 0x2f, 0x3b, 0x77, 0x69, 0x64, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_widget_activity_proto_rawDescOnce sync.Once
	file_widget_activity_proto_rawDescData = file_widget_activity_proto_rawDesc
)

func file_widget_activity_proto_rawDescGZIP() []byte {
	file_widget_activity_proto_rawDescOnce.Do(func() {
		file_widget_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_widget_activity_proto_rawDescData)
	})
	return file_widget_activity_proto_rawDescData
}

var file_widget_activity_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_widget_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_widget_activity_proto_goTypes = []interface{}{
	(ActivityChatType)(0),               // 0: proto.ActivityChatType
	(TaskType)(0),                       // 1: proto.TaskType
	(AwardType)(0),                      // 2: proto.AwardType
	(ActivityStatus)(0),                 // 3: proto.ActivityStatus
	(*Activity)(nil),                    // 4: proto.Activity
	(*SendGroup)(nil),                   // 5: proto.SendGroup
	(*GetActivityWinnerReq)(nil),        // 6: proto.GetActivityWinnerReq
	(*ActivityWinner)(nil),              // 7: proto.ActivityWinner
	(*GetActivityWinnerResp)(nil),       // 8: proto.GetActivityWinnerResp
	(*AwardList)(nil),                   // 9: proto.AwardList
	(*AwardInfo)(nil),                   // 10: proto.AwardInfo
	(*TaskTgInviteGroup)(nil),           // 11: proto.TaskTgInviteGroup
	(*TaskTwitterFollow)(nil),           // 12: proto.TaskTwitterFollow
	(*TaskTwitterRetweet)(nil),          // 13: proto.TaskTwitterRetweet
	(*TaskTgJoinGroup)(nil),             // 14: proto.TaskTgJoinGroup
	(*TaskDiscordJoinServer)(nil),       // 15: proto.TaskDiscordJoinServer
	(*TaskDiscordInviteServer)(nil),     // 16: proto.TaskDiscordInviteServer
	(*ActivityUserInfo)(nil),            // 17: proto.ActivityUserInfo
	(*TaskBindWallet)(nil),              // 18: proto.TaskBindWallet
	(*Task)(nil),                        // 19: proto.Task
	(*UserTask)(nil),                    // 20: proto.UserTask
	(*GetTaskTemplateReq)(nil),          // 21: proto.GetTaskTemplateReq
	(*TaskTemplate)(nil),                // 22: proto.TaskTemplate
	(*GetTaskTemplateResp)(nil),         // 23: proto.GetTaskTemplateResp
	(*GetTaskActivityReq)(nil),          // 24: proto.GetTaskActivityReq
	(*GetTaskActivityResp)(nil),         // 25: proto.GetTaskActivityResp
	(*GetTaskActivityListReq)(nil),      // 26: proto.GetTaskActivityListReq
	(*GetTaskActivityListResp)(nil),     // 27: proto.GetTaskActivityListResp
	(*ActivityListRespData)(nil),        // 28: proto.ActivityListRespData
	(*TaskActivityData)(nil),            // 29: proto.TaskActivityData
	(*SaveTaskActivityReq)(nil),         // 30: proto.SaveTaskActivityReq
	(*SaveTaskActivityResp)(nil),        // 31: proto.SaveTaskActivityResp
	(*UserTaskReq)(nil),                 // 32: proto.UserTaskReq
	(*UserTaskResp)(nil),                // 33: proto.UserTaskResp
	(*UserTaskData)(nil),                // 34: proto.UserTaskData
	(*GetActivityParticipatesReq)(nil),  // 35: proto.GetActivityParticipatesReq
	(*GetActivityParticipatesResp)(nil), // 36: proto.GetActivityParticipatesResp
	(*ActivityParticipatesData)(nil),    // 37: proto.ActivityParticipatesData
	(*UpdateUserTaskReq)(nil),           // 38: proto.UpdateUserTaskReq
	(*SetActivityUrlReq)(nil),           // 39: proto.SetActivityUrlReq
	nil,                                 // 40: proto.SendGroup.SendToEntry
	(*WidgetErrorMessage)(nil),          // 41: proto.WidgetErrorMessage
}
var file_widget_activity_proto_depIdxs = []int32{
	3,  // 0: proto.Activity.status:type_name -> proto.ActivityStatus
	5,  // 1: proto.Activity.send_group:type_name -> proto.SendGroup
	9,  // 2: proto.Activity.award_list:type_name -> proto.AwardList
	40, // 3: proto.SendGroup.send_to:type_name -> proto.SendGroup.SendToEntry
	41, // 4: proto.GetActivityWinnerResp.error:type_name -> proto.WidgetErrorMessage
	7,  // 5: proto.GetActivityWinnerResp.data:type_name -> proto.ActivityWinner
	10, // 6: proto.AwardList.award_info_list:type_name -> proto.AwardInfo
	2,  // 7: proto.AwardInfo.award_type:type_name -> proto.AwardType
	17, // 8: proto.TaskTgInviteGroup.invited_users:type_name -> proto.ActivityUserInfo
	17, // 9: proto.TaskDiscordInviteServer.invited_users:type_name -> proto.ActivityUserInfo
	1,  // 10: proto.Task.task_type:type_name -> proto.TaskType
	11, // 11: proto.Task.tg_invite:type_name -> proto.TaskTgInviteGroup
	14, // 12: proto.Task.tg_join_group:type_name -> proto.TaskTgJoinGroup
	16, // 13: proto.Task.discord_invite:type_name -> proto.TaskDiscordInviteServer
	15, // 14: proto.Task.discord_join:type_name -> proto.TaskDiscordJoinServer
	12, // 15: proto.Task.twitter_follow:type_name -> proto.TaskTwitterFollow
	13, // 16: proto.Task.retweet:type_name -> proto.TaskTwitterRetweet
	18, // 17: proto.Task.bind_wallet:type_name -> proto.TaskBindWallet
	1,  // 18: proto.UserTask.task_type:type_name -> proto.TaskType
	11, // 19: proto.UserTask.tg_invite:type_name -> proto.TaskTgInviteGroup
	14, // 20: proto.UserTask.tg_join_group:type_name -> proto.TaskTgJoinGroup
	16, // 21: proto.UserTask.discord_invite:type_name -> proto.TaskDiscordInviteServer
	15, // 22: proto.UserTask.discord_join:type_name -> proto.TaskDiscordJoinServer
	12, // 23: proto.UserTask.twitter_follow:type_name -> proto.TaskTwitterFollow
	13, // 24: proto.UserTask.retweet:type_name -> proto.TaskTwitterRetweet
	18, // 25: proto.UserTask.bind_wallet:type_name -> proto.TaskBindWallet
	1,  // 26: proto.TaskTemplate.task_type:type_name -> proto.TaskType
	41, // 27: proto.GetTaskTemplateResp.error:type_name -> proto.WidgetErrorMessage
	22, // 28: proto.GetTaskTemplateResp.data:type_name -> proto.TaskTemplate
	41, // 29: proto.GetTaskActivityResp.error:type_name -> proto.WidgetErrorMessage
	29, // 30: proto.GetTaskActivityResp.data:type_name -> proto.TaskActivityData
	3,  // 31: proto.GetTaskActivityListReq.status:type_name -> proto.ActivityStatus
	41, // 32: proto.GetTaskActivityListResp.error:type_name -> proto.WidgetErrorMessage
	28, // 33: proto.GetTaskActivityListResp.data:type_name -> proto.ActivityListRespData
	29, // 34: proto.ActivityListRespData.list:type_name -> proto.TaskActivityData
	4,  // 35: proto.TaskActivityData.activity:type_name -> proto.Activity
	19, // 36: proto.TaskActivityData.tasks:type_name -> proto.Task
	4,  // 37: proto.SaveTaskActivityReq.activity:type_name -> proto.Activity
	19, // 38: proto.SaveTaskActivityReq.tasks:type_name -> proto.Task
	41, // 39: proto.SaveTaskActivityResp.error:type_name -> proto.WidgetErrorMessage
	41, // 40: proto.UserTaskResp.error:type_name -> proto.WidgetErrorMessage
	34, // 41: proto.UserTaskResp.data:type_name -> proto.UserTaskData
	20, // 42: proto.UserTaskData.task:type_name -> proto.UserTask
	41, // 43: proto.GetActivityParticipatesResp.error:type_name -> proto.WidgetErrorMessage
	37, // 44: proto.GetActivityParticipatesResp.data:type_name -> proto.ActivityParticipatesData
	17, // 45: proto.ActivityParticipatesData.participates:type_name -> proto.ActivityUserInfo
	0,  // 46: proto.SendGroup.SendToEntry.value:type_name -> proto.ActivityChatType
	47, // [47:47] is the sub-list for method output_type
	47, // [47:47] is the sub-list for method input_type
	47, // [47:47] is the sub-list for extension type_name
	47, // [47:47] is the sub-list for extension extendee
	0,  // [0:47] is the sub-list for field type_name
}

func init() { file_widget_activity_proto_init() }
func file_widget_activity_proto_init() {
	if File_widget_activity_proto != nil {
		return
	}
	file_widget_error_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_widget_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityWinnerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityWinner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityWinnerResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AwardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTgInviteGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTwitterFollow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTwitterRetweet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTgJoinGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDiscordJoinServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskDiscordInviteServer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskBindWallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskTemplateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskTemplateResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskActivityListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTaskActivityListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityListRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveTaskActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveTaskActivityResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserTaskData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityParticipatesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetActivityParticipatesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityParticipatesData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserTaskReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_widget_activity_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetActivityUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_widget_activity_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_widget_activity_proto_goTypes,
		DependencyIndexes: file_widget_activity_proto_depIdxs,
		EnumInfos:         file_widget_activity_proto_enumTypes,
		MessageInfos:      file_widget_activity_proto_msgTypes,
	}.Build()
	File_widget_activity_proto = out.File
	file_widget_activity_proto_rawDesc = nil
	file_widget_activity_proto_goTypes = nil
	file_widget_activity_proto_depIdxs = nil
}
